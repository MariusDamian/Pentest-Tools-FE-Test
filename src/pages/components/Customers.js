import React, { useState, useEffect } from "react";
import customers from "../components/data/customers.json";
import { industrytList, countryList } from "./Filters";
import { Select } from "@chakra-ui/react";
import Fade from "react-reveal/Fade";
import { AiOutlineSortAscending, AiOutlineSortDescending, AiFillDelete, AiFillFilter } from "react-icons/ai";
import { BsSortNumericDownAlt, BsSortNumericUpAlt } from "react-icons/bs";

function Customers() {
     const [showFilters, setShowFilters] = useState(false);
     const [relevanceSorted, setRelevanceSorted] = useState(true);
     const [nameSorted, setNameSorted] = useState(true);
     const [customersList, setCustomersList] = useState([]);

     // Country Filter
     const [country, setCountry] = useState("");
     let countryFiltered = country !== "" ? customers.filter((customer) => customer.country === country) : customers;

     // Industry Filter
     const [industry, setIndustry] = useState("");
     let industryFiltered = industry !== "" ? countryFiltered.filter((customer) => customer.industry === industry) : countryFiltered;

     useEffect(() => {
          setCustomersList(industryFiltered);
     }, [country, industry]);

     // Delete Filters
     function reset() {
          setCountry("");
          setIndustry("");
          customers.sort(function (a, b) {
               return b.relevance - a.relevance;
          });
     }

     // Relevance Sort
     function relevanceSort() {
          setRelevanceSorted(!relevanceSorted);
          customersList.sort(function (a, b) {
               return relevanceSorted ? b.relevance - a.relevance : a.relevance - b.relevance;
          });
     }

     // Name Sort
     function nameSort() {
          setNameSorted(!nameSorted);
          customersList.sort(function (a, b) {
               return nameSorted ? a.name.localeCompare(b.name) : b.name.localeCompare(a.name);
          });
     }
     return (
          <div className="max-w-7xl mx-auto flex flex-col items-center border-b">
               <h2 className="pb-10 lg:text-3xl text-2xl font-bold text-gray-900 tracking-tight lg:max-w-lg max-w-[200px]">Browse through all our customers</h2>
               <button onClick={() => setShowFilters(!showFilters)} className={showFilters ? "border border-gray-500 py-2 m-1 w-32 rounded-lg bg-white font-semibold hover:font-semibold transform flex flex-row items-center justify-center" : "border border-gray-500 py-2 m-1 w-32 rounded-lg hover:bg-white hover:font-semibold transform flex flex-row items-center justify-center"}>
                    <p className="text-xl pr-2">
                         <AiFillFilter />
                    </p>
                    <p>Filters </p>
                    {country || industry !== "" ? (
                         <p onClick={reset} className="pl-2 text-xl hover:text-black">
                              <AiFillDelete />
                         </p>
                    ) : null}
               </button>
               {showFilters ? (
                    <Fade>
                         <div className="flex lg:flex-row flex-col pt-10 items-end">
                              <div className="w-60 lg:ml-10 flex flex-col items-start">
                                   <p className="pl-1">Country</p>
                                   <Select placeholder="All countries" value={country} onChange={(e) => setCountry(e.target.value)} borderColor="gray">
                                        {countryList.map((country, index) => (
                                             <option className="" key={index} value={country}>
                                                  {country}
                                             </option>
                                        ))}
                                   </Select>
                              </div>
                              <div className="w-60 lg:mx-5 flex flex-col items-start">
                                   <p className="pl-1">Industry</p>
                                   <Select placeholder="All industries" value={industry} onChange={(e) => setIndustry(e.target.value)} borderColor="gray">
                                        {industrytList.map((industry, index) => (
                                             <option className="" key={index} value={industry}>
                                                  {industry}
                                             </option>
                                        ))}
                                   </Select>
                              </div>
                              <div className="flex flex-row items-start justify-start space-x-4 mt-3 lg:mt-0">
                                   <button onClick={relevanceSort} className="flex flex-row border items-center justify-center rounded-lg border-gray-500 px-2 lg:px-4 py-2">
                                        <p>Relevance</p>
                                        <p>{relevanceSorted ? <BsSortNumericUpAlt className="text-xl ml-2" /> : <BsSortNumericDownAlt className="text-xl ml-2" />}</p>
                                   </button>
                                   <button onClick={nameSort} className="flex flex-row border items-center justify-center rounded-lg border-gray-500 px-4 py-2">
                                        <p>Name</p>
                                        <p>{nameSorted ? <AiOutlineSortDescending className="text-xl ml-2" /> : <AiOutlineSortAscending className="text-xl ml-2" />}</p>
                                   </button>
                              </div>
                         </div>
                    </Fade>
               ) : null}
               {customersList.length === 0 ? (
                    <div className="my-16 bg-white text-gray-700 lg:px-20 mx-5 lg:mx-0 py-10 text-lg rounded-md shadow-xl border border-gray-200">
                         <p>None of our customers match the selected filters.</p>
                    </div>
               ) : (
                    <ol className="mx-auto grid grid-cols-2 gap-5 px-5 py-10 sm:px-6 md:grid-cols-3 lg:grid-cols-5 lg:p-20 ">
                         {customersList.map((customer, index) => (
                              <Fade big key={index}>
                                   <li className="flex items-center justify-center rounded bg-white shadow-xl border border-gray-200 ">
                                        <img src={`./images/logos/${customer.logo}`} alt={`Logo of ${customer.name} a Pentest-Tools.com customer`} title={`${customer.name} is a Pentest-Tools.com customer`} width="215" height="60" className="h-24 sm:h-36 w-40 sm:w-52 object-scale-down p-4 sm:p-8" />
                                   </li>
                              </Fade>
                         ))}
                    </ol>
               )}
          </div>
     );
}

export default Customers;
